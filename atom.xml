<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://totrk3.github.io/asaka.github.io/atom.xml" rel="self"/>
  
  <link href="https://totrk3.github.io/asaka.github.io/"/>
  <updated>2022-03-19T08:50:46.661Z</updated>
  <id>https://totrk3.github.io/asaka.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Springboot参数验证</title>
    <link href="https://totrk3.github.io/asaka.github.io/2022/03/19/Springboot%E5%8F%82%E6%95%B0%E9%AA%8C%E8%AF%81/"/>
    <id>https://totrk3.github.io/asaka.github.io/2022/03/19/Springboot%E5%8F%82%E6%95%B0%E9%AA%8C%E8%AF%81/</id>
    <published>2022-03-19T08:29:01.000Z</published>
    <updated>2022-03-19T08:50:46.661Z</updated>
    
    <content type="html"><![CDATA[<p><img src="1p.png"></p><p>实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RegistLoginBO</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotBlank(message = &quot;手机号不能为空&quot;)</span></span><br><span class="line">    <span class="meta">@Length(min = 11, max = 11, message = &quot;手机长度不正确&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String mobile;</span><br><span class="line">    <span class="meta">@NotBlank(message = &quot;验证码不能为空&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String smsCode;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>引入依赖            </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- hibernate 验证框架 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-validation<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>统一异常拦截处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 统一异常拦截处理</span></span><br><span class="line"><span class="comment"> * 可以针对异常的类型进行捕获，然后返回json信息到前端</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GraceExceptionHandler</span> &#123;</span><br><span class="line">    <span class="meta">@ExceptionHandler(MethodArgumentNotValidException.class)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> GraceJSONResult <span class="title function_">returnMethodArgumentNotValid</span><span class="params">(MethodArgumentNotValidException e)</span> &#123;</span><br><span class="line">        <span class="type">BindingResult</span> <span class="variable">result</span> <span class="operator">=</span> e.getBindingResult();</span><br><span class="line">        Map&lt;String, String&gt; map = getErrors(result);</span><br><span class="line">        <span class="keyword">return</span> GraceJSONResult.errorMap(map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, String&gt; <span class="title function_">getErrors</span><span class="params">(BindingResult result)</span> &#123;</span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        List&lt;FieldError&gt; errorList = result.getFieldErrors();</span><br><span class="line">        <span class="keyword">for</span> (FieldError ff : errorList) &#123;</span><br><span class="line">            <span class="comment">// 错误所对应的属性字段名</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">field</span> <span class="operator">=</span> ff.getField();</span><br><span class="line">            <span class="comment">// 错误的信息</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> ff.getDefaultMessage();</span><br><span class="line">            map.put(field, msg);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试</p><p><img src="2p.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;1p.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;实体类&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span </summary>
      
    
    
    
    
    <category term="Spring" scheme="https://totrk3.github.io/asaka.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>minIO配置并整合Springboot</title>
    <link href="https://totrk3.github.io/asaka.github.io/2022/03/19/minIO%E9%85%8D%E7%BD%AE%E5%B9%B6%E6%95%B4%E5%90%88Springboot/"/>
    <id>https://totrk3.github.io/asaka.github.io/2022/03/19/minIO%E9%85%8D%E7%BD%AE%E5%B9%B6%E6%95%B4%E5%90%88Springboot/</id>
    <published>2022-03-19T08:28:46.000Z</published>
    <updated>2022-03-19T08:53:53.471Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装并配置minIO"><a href="#安装并配置minIO" class="headerlink" title="安装并配置minIO"></a>安装并配置minIO</h2><p>下载minio</p><p>minio下载地址：<a href="https://docs.min.io/">https://docs.min.io/</a></p><p><img src="1p.png"></p><p>通过工具上传到linux某一目录至并安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /usr/local/minio</span><br><span class="line"><span class="built_in">cp</span> minio /usr/local/minio</span><br><span class="line"><span class="built_in">chmod</span> +x minio</span><br></pre></td></tr></table></figure><p>运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./minio</span><br><span class="line">./minio server /usr/local/minio/data</span><br></pre></td></tr></table></figure><p>测试，默认端口9000进入控制台，账号和密码：minioadmin</p><p>结束进程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep minio</span><br><span class="line">kill -9 xxxx</span><br></pre></td></tr></table></figure><p>创建启动脚本</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> MINIO_ROOT_USER=root</span><br><span class="line"><span class="built_in">export</span> MINIO_ROOT_PASSWORD=12345678</span><br><span class="line">/usr/local/minio/minio server --console-address 0.0.0.0:9111 </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>授予脚本权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x start-minio.sh</span><br></pre></td></tr></table></figure><p>结束进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep minio</span><br><span class="line"><span class="built_in">kill</span> -9 xxxx</span><br></pre></td></tr></table></figure><p>启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./start-minio.sh</span><br></pre></td></tr></table></figure><p>进入控制台操作</p><p><img src="2p.png"></p><p><img src="3p.png"></p><p><img src="4p.png"></p><p>Springboot整合minIO</p><p>propertiese.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span>  </span><br><span class="line"><span class="attr">servlet:</span>    </span><br><span class="line"><span class="attr">multipart:</span>      </span><br><span class="line"><span class="attr">enabled:</span> <span class="literal">true</span> <span class="comment">#开启文件上传      max-file-size: 10MB #限制文件上传大小为10M</span></span><br><span class="line"><span class="comment"># MinIO 配置</span></span><br><span class="line">    <span class="attr">minio:</span></span><br><span class="line">      <span class="attr">endpoint:</span> <span class="string">http://192.168.186.101:9000</span>      <span class="comment"># MinIO服务地址</span></span><br><span class="line">      <span class="attr">fileHost:</span> <span class="string">http://192.168.186.101:9000</span>        <span class="comment"># 文件地址host</span></span><br><span class="line">      <span class="attr">bucketName:</span> <span class="string">redbook</span>                      <span class="comment"># 存储桶bucket名称</span></span><br><span class="line">      <span class="attr">accessKey:</span> <span class="string">root</span>                         <span class="comment"># 用户名</span></span><br><span class="line">      <span class="attr">secretKey:</span> <span class="number">12345678</span>                     <span class="comment"># 密码</span></span><br><span class="line">      <span class="attr">imgSize:</span> <span class="number">1024</span>                           <span class="comment"># 图片大小限制，单位：m</span></span><br><span class="line">      <span class="attr">fileSize:</span> <span class="number">1024</span>                          <span class="comment"># 文件大小限制，单位：m</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>引入pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">&lt;!-- MinIO --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.minio<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>minio<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>添加工具类MinIOUtil</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.minio.*;</span><br><span class="line"><span class="keyword">import</span> io.minio.http.Method;</span><br><span class="line"><span class="keyword">import</span> io.minio.messages.Bucket;</span><br><span class="line"><span class="keyword">import</span> io.minio.messages.DeleteObject;</span><br><span class="line"><span class="keyword">import</span> io.minio.messages.Item;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.net.URLDecoder;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Optional;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * MinIO工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MinIOUtil</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> MinioClient minioClient;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String endpoint;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String bucketName;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String accessKey;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String secretKey;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Integer imgSize;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Integer fileSize;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SEPARATOR</span> <span class="operator">=</span> <span class="string">&quot;/&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MinIOUtil</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MinIOUtil</span><span class="params">(String endpoint, String bucketName, String accessKey, String secretKey, Integer imgSize, Integer fileSize)</span> &#123;</span><br><span class="line">        MinIOUtil.endpoint = endpoint;</span><br><span class="line">        MinIOUtil.bucketName = bucketName;</span><br><span class="line">        MinIOUtil.accessKey = accessKey;</span><br><span class="line">        MinIOUtil.secretKey = secretKey;</span><br><span class="line">        MinIOUtil.imgSize = imgSize;</span><br><span class="line">        MinIOUtil.fileSize = fileSize;</span><br><span class="line">        createMinioClient();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建基于Java端的MinioClient</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">createMinioClient</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> == minioClient) &#123;</span><br><span class="line">                log.info(<span class="string">&quot;开始创建 MinioClient...&quot;</span>);</span><br><span class="line">                minioClient = MinioClient</span><br><span class="line">                                .builder()</span><br><span class="line">                                .endpoint(endpoint)</span><br><span class="line">                                .credentials(accessKey, secretKey)</span><br><span class="line">                                .build();</span><br><span class="line">                createBucket(bucketName);</span><br><span class="line">                log.info(<span class="string">&quot;创建完毕 MinioClient...&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;MinIO服务器异常：&#123;&#125;&quot;</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取上传文件前缀路径</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getBasisUrl</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> endpoint + SEPARATOR + bucketName + SEPARATOR;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/******************************  Operate Bucket Start  ******************************/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 启动SpringBoot容器的时候初始化Bucket</span></span><br><span class="line"><span class="comment">     * 如果没有Bucket则创建</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">createBucket</span><span class="params">(String bucketName)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">if</span> (!bucketExists(bucketName)) &#123;</span><br><span class="line">            minioClient.makeBucket(MakeBucketArgs.builder().bucket(bucketName).build());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  判断Bucket是否存在，true：存在，false：不存在</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">bucketExists</span><span class="params">(String bucketName)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> minioClient.bucketExists(BucketExistsArgs.builder().bucket(bucketName).build());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获得Bucket的策略</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bucketName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getBucketPolicy</span><span class="params">(String bucketName)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">bucketPolicy</span> <span class="operator">=</span> minioClient</span><br><span class="line">                                .getBucketPolicy(</span><br><span class="line">                                        GetBucketPolicyArgs</span><br><span class="line">                                                .builder()</span><br><span class="line">                                                .bucket(bucketName)</span><br><span class="line">                                                .build()</span><br><span class="line">                                );</span><br><span class="line">        <span class="keyword">return</span> bucketPolicy;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获得所有Bucket列表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;Bucket&gt; <span class="title function_">getAllBuckets</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> minioClient.listBuckets();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据bucketName获取其相关信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bucketName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Optional&lt;Bucket&gt; <span class="title function_">getBucket</span><span class="params">(String bucketName)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> getAllBuckets().stream().filter(b -&gt; b.name().equals(bucketName)).findFirst();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据bucketName删除Bucket，true：删除成功； false：删除失败，文件或已不存在</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bucketName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">removeBucket</span><span class="params">(String bucketName)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        minioClient.removeBucket(RemoveBucketArgs.builder().bucket(bucketName).build());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/******************************  Operate Bucket End  ******************************/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/******************************  Operate Files Start  ******************************/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断文件是否存在</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bucketName 存储桶</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> objectName 文件名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isObjectExist</span><span class="params">(String bucketName, String objectName)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">exist</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            minioClient.statObject(StatObjectArgs.builder().bucket(bucketName).object(objectName).build());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            exist = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> exist;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断文件夹是否存在</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bucketName 存储桶</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> objectName 文件夹名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isFolderExist</span><span class="params">(String bucketName, String objectName)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">exist</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Iterable&lt;Result&lt;Item&gt;&gt; results = minioClient.listObjects(</span><br><span class="line">                    ListObjectsArgs.builder().bucket(bucketName).prefix(objectName).recursive(<span class="literal">false</span>).build());</span><br><span class="line">            <span class="keyword">for</span> (Result&lt;Item&gt; result : results) &#123;</span><br><span class="line">                <span class="type">Item</span> <span class="variable">item</span> <span class="operator">=</span> result.get();</span><br><span class="line">                <span class="keyword">if</span> (item.isDir() &amp;&amp; objectName.equals(item.objectName())) &#123;</span><br><span class="line">                    exist = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            exist = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> exist;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据文件前缀查询文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bucketName 存储桶</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> prefix 前缀</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> recursive 是否使用递归查询</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> MinioItem 列表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;Item&gt; <span class="title function_">getAllObjectsByPrefix</span><span class="params">(String bucketName,</span></span><br><span class="line"><span class="params">                                                   String prefix,</span></span><br><span class="line"><span class="params">                                                   <span class="type">boolean</span> recursive)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        List&lt;Item&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Iterable&lt;Result&lt;Item&gt;&gt; objectsIterator = minioClient.listObjects(</span><br><span class="line">                ListObjectsArgs.builder().bucket(bucketName).prefix(prefix).recursive(recursive).build());</span><br><span class="line">        <span class="keyword">if</span> (objectsIterator != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (Result&lt;Item&gt; o : objectsIterator) &#123;</span><br><span class="line">                <span class="type">Item</span> <span class="variable">item</span> <span class="operator">=</span> o.get();</span><br><span class="line">                list.add(item);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取文件流</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bucketName 存储桶</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> objectName 文件名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 二进制流</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> InputStream <span class="title function_">getObject</span><span class="params">(String bucketName, String objectName)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> minioClient.getObject(GetObjectArgs.builder().bucket(bucketName).object(objectName).build());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 断点下载</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bucketName 存储桶</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> objectName 文件名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> offset 起始字节的位置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> length 要读取的长度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 二进制流</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> InputStream <span class="title function_">getObject</span><span class="params">(String bucketName, String objectName, <span class="type">long</span> offset, <span class="type">long</span> length)</span><span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> minioClient.getObject(</span><br><span class="line">                GetObjectArgs.builder()</span><br><span class="line">                        .bucket(bucketName)</span><br><span class="line">                        .object(objectName)</span><br><span class="line">                        .offset(offset)</span><br><span class="line">                        .length(length)</span><br><span class="line">                        .build());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取路径下文件列表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bucketName 存储桶</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> prefix 文件名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> recursive 是否递归查找，false：模拟文件夹结构查找</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 二进制流</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Iterable&lt;Result&lt;Item&gt;&gt; <span class="title function_">listObjects</span><span class="params">(String bucketName, String prefix,</span></span><br><span class="line"><span class="params">                                                     <span class="type">boolean</span> recursive)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> minioClient.listObjects(</span><br><span class="line">                ListObjectsArgs.builder()</span><br><span class="line">                        .bucket(bucketName)</span><br><span class="line">                        .prefix(prefix)</span><br><span class="line">                        .recursive(recursive)</span><br><span class="line">                        .build());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用MultipartFile进行文件上传</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bucketName 存储桶</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file 文件名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> objectName 对象名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> contentType 类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ObjectWriteResponse <span class="title function_">uploadFile</span><span class="params">(String bucketName, MultipartFile file,</span></span><br><span class="line"><span class="params">                                                String objectName, String contentType)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> file.getInputStream();</span><br><span class="line">        <span class="keyword">return</span> minioClient.putObject(</span><br><span class="line">                PutObjectArgs.builder()</span><br><span class="line">                        .bucket(bucketName)</span><br><span class="line">                        .object(objectName)</span><br><span class="line">                        .contentType(contentType)</span><br><span class="line">                        .stream(inputStream, inputStream.available(), -<span class="number">1</span>)</span><br><span class="line">                        .build());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 上传本地文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bucketName 存储桶</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> objectName 对象名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileName 本地文件路径</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ObjectWriteResponse <span class="title function_">uploadFile</span><span class="params">(String bucketName, String objectName,</span></span><br><span class="line"><span class="params">                                                String fileName)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> minioClient.uploadObject(</span><br><span class="line">                UploadObjectArgs.builder()</span><br><span class="line">                        .bucket(bucketName)</span><br><span class="line">                        .object(objectName)</span><br><span class="line">                        .filename(fileName)</span><br><span class="line">                        .build());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过流上传文件</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bucketName 存储桶</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> objectName 文件对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> inputStream 文件流</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ObjectWriteResponse <span class="title function_">uploadFile</span><span class="params">(String bucketName, String objectName, InputStream inputStream)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> minioClient.putObject(</span><br><span class="line">                PutObjectArgs.builder()</span><br><span class="line">                        .bucket(bucketName)</span><br><span class="line">                        .object(objectName)</span><br><span class="line">                        .stream(inputStream, inputStream.available(), -<span class="number">1</span>)</span><br><span class="line">                        .build());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建文件夹或目录</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bucketName 存储桶</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> objectName 目录路径</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ObjectWriteResponse <span class="title function_">createDir</span><span class="params">(String bucketName, String objectName)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> minioClient.putObject(</span><br><span class="line">                PutObjectArgs.builder()</span><br><span class="line">                        .bucket(bucketName)</span><br><span class="line">                        .object(objectName)</span><br><span class="line">                        .stream(<span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(<span class="keyword">new</span> <span class="title class_">byte</span>[]&#123;&#125;), <span class="number">0</span>, -<span class="number">1</span>)</span><br><span class="line">                        .build());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取文件信息, 如果抛出异常则说明文件不存在</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bucketName 存储桶</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> objectName 文件名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getFileStatusInfo</span><span class="params">(String bucketName, String objectName)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> minioClient.statObject(</span><br><span class="line">                StatObjectArgs.builder()</span><br><span class="line">                        .bucket(bucketName)</span><br><span class="line">                        .object(objectName)</span><br><span class="line">                        .build()).toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 拷贝文件</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bucketName 存储桶</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> objectName 文件名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> srcBucketName 目标存储桶</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> srcObjectName 目标文件名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ObjectWriteResponse <span class="title function_">copyFile</span><span class="params">(String bucketName, String objectName,</span></span><br><span class="line"><span class="params">                                                 String srcBucketName, String srcObjectName)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> minioClient.copyObject(</span><br><span class="line">                CopyObjectArgs.builder()</span><br><span class="line">                        .source(CopySource.builder().bucket(bucketName).object(objectName).build())</span><br><span class="line">                        .bucket(srcBucketName)</span><br><span class="line">                        .object(srcObjectName)</span><br><span class="line">                        .build());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bucketName 存储桶</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> objectName 文件名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">removeFile</span><span class="params">(String bucketName, String objectName)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        minioClient.removeObject(</span><br><span class="line">                RemoveObjectArgs.builder()</span><br><span class="line">                        .bucket(bucketName)</span><br><span class="line">                        .object(objectName)</span><br><span class="line">                        .build());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量删除文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bucketName 存储桶</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> keys 需要删除的文件列表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">removeFiles</span><span class="params">(String bucketName, List&lt;String&gt; keys)</span> &#123;</span><br><span class="line">        List&lt;DeleteObject&gt; objects = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">        keys.forEach(s -&gt; &#123;</span><br><span class="line">            objects.add(<span class="keyword">new</span> <span class="title class_">DeleteObject</span>(s));</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                removeFile(bucketName, s);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                log.error(<span class="string">&quot;批量删除失败！error:&#123;&#125;&quot;</span>,e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取文件外链</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bucketName 存储桶</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> objectName 文件名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> expires 过期时间 &lt;=7 秒 （外链有效时间（单位：秒））</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getPresignedObjectUrl</span><span class="params">(String bucketName, String objectName, Integer expires)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">GetPresignedObjectUrlArgs</span> <span class="variable">args</span> <span class="operator">=</span> GetPresignedObjectUrlArgs.builder().expiry(expires).bucket(bucketName).object(objectName).build();</span><br><span class="line">        <span class="keyword">return</span> minioClient.getPresignedObjectUrl(args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获得文件外链</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bucketName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> objectName</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getPresignedObjectUrl</span><span class="params">(String bucketName, String objectName)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">GetPresignedObjectUrlArgs</span> <span class="variable">args</span> <span class="operator">=</span> GetPresignedObjectUrlArgs.builder()</span><br><span class="line">                                                                    .bucket(bucketName)</span><br><span class="line">                                                                    .object(objectName)</span><br><span class="line">                                                                    .method(Method.GET).build();</span><br><span class="line">        <span class="keyword">return</span> minioClient.getPresignedObjectUrl(args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将URLDecoder编码转成UTF8</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> str</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> UnsupportedEncodingException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getUtf8ByURLDecoder</span><span class="params">(String str)</span> <span class="keyword">throws</span> UnsupportedEncodingException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> str.replaceAll(<span class="string">&quot;%(?![0-9a-fA-F]&#123;2&#125;)&quot;</span>, <span class="string">&quot;%25&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> URLDecoder.decode(url, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/******************************  Operate Files End  ******************************/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>添加配置类MinioConfig</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MinioConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;minio.endpoint&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String endpoint;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;minio.fileHost&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String fileHost;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;minio.bucketName&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String bucketName;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;minio.accessKey&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String accessKey;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;minio.secretKey&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String secretKey;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;minio.imgSize&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer imgSize;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;minio.fileSize&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer fileSize;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> MinIOUtil <span class="title function_">creatMinioClient</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MinIOUtil</span>(endpoint, bucketName, accessKey, secretKey, imgSize, fileSize);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>编写controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileController</span> <span class="keyword">extends</span> <span class="title class_">BaseProperise</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MinioConfig minIOCon;</span><br><span class="line">    <span class="meta">@PostMapping(&quot;upload&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> GraceJSONResult <span class="title function_">upload</span><span class="params">(MultipartFile multipartFile)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">filename</span> <span class="operator">=</span> multipartFile.getOriginalFilename();</span><br><span class="line">        MinIOUtil.uploadFile(minIOCon.getBucketName(),</span><br><span class="line">                              filename,multipartFile.getInputStream());</span><br><span class="line">        <span class="type">String</span> <span class="variable">imgUrl</span> <span class="operator">=</span> minIOCon.getFileHost()</span><br><span class="line">                        +<span class="string">&quot;/&quot;</span></span><br><span class="line">                        +minIOCon.getBucketName()</span><br><span class="line">                        +<span class="string">&quot;/&quot;</span></span><br><span class="line">                        +filename;</span><br><span class="line">        <span class="keyword">return</span> GraceJSONResult.ok(imgUrl);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="5p.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装并配置minIO&quot;&gt;&lt;a href=&quot;#安装并配置minIO&quot; class=&quot;headerlink&quot; title=&quot;安装并配置minIO&quot;&gt;&lt;/a&gt;安装并配置minIO&lt;/h2&gt;&lt;p&gt;下载minio&lt;/p&gt;
&lt;p&gt;minio下载地址：&lt;a href=&quot;http</summary>
      
    
    
    
    
    <category term="Spring" scheme="https://totrk3.github.io/asaka.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>后端统一接口</title>
    <link href="https://totrk3.github.io/asaka.github.io/2022/03/19/%E5%90%8E%E7%AB%AF%E7%BB%9F%E4%B8%80%E6%8E%A5%E5%8F%A3/"/>
    <id>https://totrk3.github.io/asaka.github.io/2022/03/19/%E5%90%8E%E7%AB%AF%E7%BB%9F%E4%B8%80%E6%8E%A5%E5%8F%A3/</id>
    <published>2022-03-19T08:25:23.000Z</published>
    <updated>2022-03-19T08:26:51.263Z</updated>
    
    <content type="html"><![CDATA[<p>接口类JSONResult</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JSONResult</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 响应业务状态码</span></span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 响应消息</span></span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 是否成功</span></span><br><span class="line">    <span class="keyword">private</span> Boolean success;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 响应数据，可以是Object，也可以是List或Map等</span></span><br><span class="line">    <span class="keyword">private</span> Object data;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 成功返回，带有数据的，直接往OK方法丢data数据即可</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JSONResult <span class="title function_">ok</span><span class="params">(Object data)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">JSONResult</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 成功返回，不带有数据的，直接调用ok方法，data无须传入（其实就是null）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JSONResult <span class="title function_">ok</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">JSONResult</span>(ResponseStatusEnum.SUCCESS);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">JSONResult</span><span class="params">(Object data)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.status = ResponseStatusEnum.SUCCESS.status();</span><br><span class="line">        <span class="built_in">this</span>.msg = ResponseStatusEnum.SUCCESS.msg();</span><br><span class="line">        <span class="built_in">this</span>.success = ResponseStatusEnum.SUCCESS.success();</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 错误返回，直接调用error方法即可，当然也可以在ResponseStatusEnum中自定义错误后再返回也都可以</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JSONResult <span class="title function_">error</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">JSONResult</span>(ResponseStatusEnum.FAILED);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 错误返回，map中包含了多条错误信息，可以用于表单验证，把错误统一的全部返回出去</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> map</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JSONResult <span class="title function_">errorMap</span><span class="params">(Map map)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">JSONResult</span>(ResponseStatusEnum.FAILED, map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 错误返回，直接返回错误的消息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> msg</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JSONResult <span class="title function_">errorMsg</span><span class="params">(String msg)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">JSONResult</span>(ResponseStatusEnum.FAILED, msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 错误返回，token异常，一些通用的可以在这里统一定义</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JSONResult <span class="title function_">errorTicket</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">JSONResult</span>(ResponseStatusEnum.TICKET_INVALID);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自定义错误范围，需要传入一个自定义的枚举，可以到[ResponseStatusEnum.java[中自定义后再传入</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> responseStatus</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JSONResult <span class="title function_">errorCustom</span><span class="params">(ResponseStatusEnum responseStatus)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">JSONResult</span>(responseStatus);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JSONResult <span class="title function_">exception</span><span class="params">(ResponseStatusEnum responseStatus)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">JSONResult</span>(responseStatus);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">JSONResult</span><span class="params">(ResponseStatusEnum responseStatus)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.status = responseStatus.status();</span><br><span class="line">        <span class="built_in">this</span>.msg = responseStatus.msg();</span><br><span class="line">        <span class="built_in">this</span>.success = responseStatus.success();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">JSONResult</span><span class="params">(ResponseStatusEnum responseStatus, Object data)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.status = responseStatus.status();</span><br><span class="line">        <span class="built_in">this</span>.msg = responseStatus.msg();</span><br><span class="line">        <span class="built_in">this</span>.success = responseStatus.success();</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">JSONResult</span><span class="params">(ResponseStatusEnum responseStatus, String msg)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.status = responseStatus.status();</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">        <span class="built_in">this</span>.success = responseStatus.success();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">JSONResult</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getStatus</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> status;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStatus</span><span class="params">(Integer status)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.status = status;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMsg</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMsg</span><span class="params">(String msg)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getData</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setData</span><span class="params">(Object data)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Boolean <span class="title function_">getSuccess</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> success;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSuccess</span><span class="params">(Boolean success)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.success = success;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>错误信息枚举类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.grace.result;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 响应结果枚举，用于提供给GraceJSONResult返回给前端的</span></span><br><span class="line"><span class="comment"> * 本枚举类中包含了很多的不同的状态码供使用，可以自定义</span></span><br><span class="line"><span class="comment"> * 便于更优雅的对状态码进行管理，一目了然</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">ResponseStatusEnum</span> &#123;</span><br><span class="line"></span><br><span class="line">    SUCCESS(<span class="number">200</span>, <span class="literal">true</span>, <span class="string">&quot;操作成功！&quot;</span>),</span><br><span class="line">    FAILED(<span class="number">500</span>, <span class="literal">false</span>, <span class="string">&quot;操作失败！&quot;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 50x</span></span><br><span class="line">    UN_LOGIN(<span class="number">501</span>,<span class="literal">false</span>,<span class="string">&quot;请登录后再继续操作！&quot;</span>),</span><br><span class="line">    TICKET_INVALID(<span class="number">502</span>,<span class="literal">false</span>,<span class="string">&quot;会话失效，请重新登录！&quot;</span>),</span><br><span class="line">    NO_AUTH(<span class="number">503</span>,<span class="literal">false</span>,<span class="string">&quot;您的权限不足，无法继续操作！&quot;</span>),</span><br><span class="line">    MOBILE_ERROR(<span class="number">504</span>,<span class="literal">false</span>,<span class="string">&quot;短信发送失败，请稍后重试！&quot;</span>),</span><br><span class="line">    SMS_NEED_WAIT_ERROR(<span class="number">505</span>,<span class="literal">false</span>,<span class="string">&quot;短信发送太快啦~请稍后再试！&quot;</span>),</span><br><span class="line">    SMS_CODE_ERROR(<span class="number">506</span>,<span class="literal">false</span>,<span class="string">&quot;验证码过期或不匹配，请稍后再试！&quot;</span>),</span><br><span class="line">    USER_FROZEN(<span class="number">507</span>,<span class="literal">false</span>,<span class="string">&quot;用户已被冻结，请联系管理员！&quot;</span>),</span><br><span class="line">    USER_UPDATE_ERROR(<span class="number">508</span>,<span class="literal">false</span>,<span class="string">&quot;用户信息更新失败，请联系管理员！&quot;</span>),</span><br><span class="line">    USER_INACTIVE_ERROR(<span class="number">509</span>,<span class="literal">false</span>,<span class="string">&quot;请前往[账号设置]修改信息激活后再进行后续操作！&quot;</span>),</span><br><span class="line">    USER_INFO_UPDATED_ERROR(<span class="number">5091</span>,<span class="literal">false</span>,<span class="string">&quot;用户信息修改失败！&quot;</span>),</span><br><span class="line">    USER_INFO_UPDATED_NICKNAME_EXIST_ERROR(<span class="number">5092</span>,<span class="literal">false</span>,<span class="string">&quot;昵称已经存在！&quot;</span>),</span><br><span class="line">    USER_INFO_UPDATED_IMOOCNUM_EXIST_ERROR(<span class="number">5092</span>,<span class="literal">false</span>,<span class="string">&quot;慕课号已经存在！&quot;</span>),</span><br><span class="line">    USER_INFO_CANT_UPDATED_IMOOCNUM_ERROR(<span class="number">5092</span>,<span class="literal">false</span>,<span class="string">&quot;慕课号无法修改！&quot;</span>),</span><br><span class="line">    FILE_UPLOAD_NULL_ERROR(<span class="number">510</span>,<span class="literal">false</span>,<span class="string">&quot;文件不能为空，请选择一个文件再上传！&quot;</span>),</span><br><span class="line">    FILE_UPLOAD_FAILD(<span class="number">511</span>,<span class="literal">false</span>,<span class="string">&quot;文件上传失败！&quot;</span>),</span><br><span class="line">    FILE_FORMATTER_FAILD(<span class="number">512</span>,<span class="literal">false</span>,<span class="string">&quot;文件图片格式不支持！&quot;</span>),</span><br><span class="line">    FILE_MAX_SIZE_500KB_ERROR(<span class="number">5131</span>,<span class="literal">false</span>,<span class="string">&quot;仅支持500kb大小以下的图片上传！&quot;</span>),</span><br><span class="line">    FILE_MAX_SIZE_2MB_ERROR(<span class="number">5132</span>,<span class="literal">false</span>,<span class="string">&quot;仅支持2MB大小以下的图片上传！&quot;</span>),</span><br><span class="line">    FILE_NOT_EXIST_ERROR(<span class="number">514</span>,<span class="literal">false</span>,<span class="string">&quot;你所查看的文件不存在！&quot;</span>),</span><br><span class="line">    USER_STATUS_ERROR(<span class="number">515</span>,<span class="literal">false</span>,<span class="string">&quot;用户状态参数出错！&quot;</span>),</span><br><span class="line">    USER_NOT_EXIST_ERROR(<span class="number">516</span>,<span class="literal">false</span>,<span class="string">&quot;用户不存在！&quot;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 自定义系统级别异常 54x</span></span><br><span class="line">    SYSTEM_INDEX_OUT_OF_BOUNDS(<span class="number">541</span>, <span class="literal">false</span>, <span class="string">&quot;系统错误，数组越界！&quot;</span>),</span><br><span class="line">    SYSTEM_ARITHMETIC_BY_ZERO(<span class="number">542</span>, <span class="literal">false</span>, <span class="string">&quot;系统错误，无法除零！&quot;</span>),</span><br><span class="line">    SYSTEM_NULL_POINTER(<span class="number">543</span>, <span class="literal">false</span>, <span class="string">&quot;系统错误，空指针！&quot;</span>),</span><br><span class="line">    SYSTEM_NUMBER_FORMAT(<span class="number">544</span>, <span class="literal">false</span>, <span class="string">&quot;系统错误，数字转换异常！&quot;</span>),</span><br><span class="line">    SYSTEM_PARSE(<span class="number">545</span>, <span class="literal">false</span>, <span class="string">&quot;系统错误，解析异常！&quot;</span>),</span><br><span class="line">    SYSTEM_IO(<span class="number">546</span>, <span class="literal">false</span>, <span class="string">&quot;系统错误，IO输入输出异常！&quot;</span>),</span><br><span class="line">    SYSTEM_FILE_NOT_FOUND(<span class="number">547</span>, <span class="literal">false</span>, <span class="string">&quot;系统错误，文件未找到！&quot;</span>),</span><br><span class="line">    SYSTEM_CLASS_CAST(<span class="number">548</span>, <span class="literal">false</span>, <span class="string">&quot;系统错误，类型强制转换错误！&quot;</span>),</span><br><span class="line">    SYSTEM_PARSER_ERROR(<span class="number">549</span>, <span class="literal">false</span>, <span class="string">&quot;系统错误，解析出错！&quot;</span>),</span><br><span class="line">    SYSTEM_DATE_PARSER_ERROR(<span class="number">550</span>, <span class="literal">false</span>, <span class="string">&quot;系统错误，日期解析出错！&quot;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// admin 管理系统 56x</span></span><br><span class="line">    ADMIN_USERNAME_NULL_ERROR(<span class="number">561</span>, <span class="literal">false</span>, <span class="string">&quot;管理员登录名不能为空！&quot;</span>),</span><br><span class="line">    ADMIN_USERNAME_EXIST_ERROR(<span class="number">562</span>, <span class="literal">false</span>, <span class="string">&quot;管理员登录名已存在！&quot;</span>),</span><br><span class="line">    ADMIN_NAME_NULL_ERROR(<span class="number">563</span>, <span class="literal">false</span>, <span class="string">&quot;管理员负责人不能为空！&quot;</span>),</span><br><span class="line">    ADMIN_PASSWORD_ERROR(<span class="number">564</span>, <span class="literal">false</span>, <span class="string">&quot;密码不能为空后者两次输入不一致！&quot;</span>),</span><br><span class="line">    ADMIN_CREATE_ERROR(<span class="number">565</span>, <span class="literal">false</span>, <span class="string">&quot;添加管理员失败！&quot;</span>),</span><br><span class="line">    ADMIN_PASSWORD_NULL_ERROR(<span class="number">566</span>, <span class="literal">false</span>, <span class="string">&quot;密码不能为空！&quot;</span>),</span><br><span class="line">    ADMIN_NOT_EXIT_ERROR(<span class="number">567</span>, <span class="literal">false</span>, <span class="string">&quot;管理员不存在或密码错误！&quot;</span>),</span><br><span class="line">    ADMIN_FACE_NULL_ERROR(<span class="number">568</span>, <span class="literal">false</span>, <span class="string">&quot;人脸信息不能为空！&quot;</span>),</span><br><span class="line">    ADMIN_FACE_LOGIN_ERROR(<span class="number">569</span>, <span class="literal">false</span>, <span class="string">&quot;人脸识别失败，请重试！&quot;</span>),</span><br><span class="line">    CATEGORY_EXIST_ERROR(<span class="number">570</span>, <span class="literal">false</span>, <span class="string">&quot;文章分类已存在，请换一个分类名！&quot;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 媒体中心 相关错误 58x</span></span><br><span class="line">    ARTICLE_COVER_NOT_EXIST_ERROR(<span class="number">580</span>, <span class="literal">false</span>, <span class="string">&quot;文章封面不存在，请选择一个！&quot;</span>),</span><br><span class="line">    ARTICLE_CATEGORY_NOT_EXIST_ERROR(<span class="number">581</span>, <span class="literal">false</span>, <span class="string">&quot;请选择正确的文章领域！&quot;</span>),</span><br><span class="line">    ARTICLE_CREATE_ERROR(<span class="number">582</span>, <span class="literal">false</span>, <span class="string">&quot;创建文章失败，请重试或联系管理员！&quot;</span>),</span><br><span class="line">    ARTICLE_QUERY_PARAMS_ERROR(<span class="number">583</span>, <span class="literal">false</span>, <span class="string">&quot;文章列表查询参数错误！&quot;</span>),</span><br><span class="line">    ARTICLE_DELETE_ERROR(<span class="number">584</span>, <span class="literal">false</span>, <span class="string">&quot;文章删除失败！&quot;</span>),</span><br><span class="line">    ARTICLE_WITHDRAW_ERROR(<span class="number">585</span>, <span class="literal">false</span>, <span class="string">&quot;文章撤回失败！&quot;</span>),</span><br><span class="line">    ARTICLE_REVIEW_ERROR(<span class="number">585</span>, <span class="literal">false</span>, <span class="string">&quot;文章审核出错！&quot;</span>),</span><br><span class="line">    ARTICLE_ALREADY_READ_ERROR(<span class="number">586</span>, <span class="literal">false</span>, <span class="string">&quot;文章重复阅读！&quot;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 人脸识别错误代码</span></span><br><span class="line">    FACE_VERIFY_TYPE_ERROR(<span class="number">600</span>, <span class="literal">false</span>, <span class="string">&quot;人脸比对验证类型不正确！&quot;</span>),</span><br><span class="line">    FACE_VERIFY_LOGIN_ERROR(<span class="number">601</span>, <span class="literal">false</span>, <span class="string">&quot;人脸登录失败！&quot;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 系统错误，未预期的错误 555</span></span><br><span class="line">    SYSTEM_ERROR(<span class="number">555</span>, <span class="literal">false</span>, <span class="string">&quot;系统繁忙，请稍后再试！&quot;</span>),</span><br><span class="line">    SYSTEM_OPERATION_ERROR(<span class="number">556</span>, <span class="literal">false</span>, <span class="string">&quot;操作失败，请重试或联系管理员&quot;</span>),</span><br><span class="line">    SYSTEM_RESPONSE_NO_INFO(<span class="number">557</span>, <span class="literal">false</span>, <span class="string">&quot;&quot;</span>),</span><br><span class="line">    SYSTEM_ERROR_GLOBAL(<span class="number">558</span>, <span class="literal">false</span>, <span class="string">&quot;全局降级：系统繁忙，请稍后再试！&quot;</span>),</span><br><span class="line">    SYSTEM_ERROR_FEIGN(<span class="number">559</span>, <span class="literal">false</span>, <span class="string">&quot;客户端Feign降级：系统繁忙，请稍后再试！&quot;</span>),</span><br><span class="line">    SYSTEM_ERROR_ZUUL(<span class="number">560</span>, <span class="literal">false</span>, <span class="string">&quot;请求系统过于繁忙，请稍后再试！&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 响应业务状态</span></span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line">    <span class="comment">// 调用是否成功</span></span><br><span class="line">    <span class="keyword">private</span> Boolean success;</span><br><span class="line">    <span class="comment">// 响应消息，可以为成功或者失败的消息</span></span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line">    ResponseStatusEnum(Integer status, Boolean success, String msg) &#123;</span><br><span class="line">        <span class="built_in">this</span>.status = status;</span><br><span class="line">        <span class="built_in">this</span>.success = success;</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">status</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> status;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Boolean <span class="title function_">success</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> success;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">msg</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;接口类JSONResult&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/</summary>
      
    
    
    
    
    <category term="Spring" scheme="https://totrk3.github.io/asaka.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://totrk3.github.io/asaka.github.io/2022/03/18/hello-world/"/>
    <id>https://totrk3.github.io/asaka.github.io/2022/03/18/hello-world/</id>
    <published>2022-03-18T08:36:53.185Z</published>
    <updated>1985-10-26T08:15:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>

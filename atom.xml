<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://github.com/ToTrk3/asaka.github.io/atom.xml" rel="self"/>
  
  <link href="https://github.com/ToTrk3/asaka.github.io/"/>
  <updated>2022-03-19T09:41:41.313Z</updated>
  <id>https://github.com/ToTrk3/asaka.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>minIO配置并整合Springboot</title>
    <link href="https://github.com/ToTrk3/asaka.github.io/2022/03/19/minIO%E9%85%8D%E7%BD%AE%E5%B9%B6%E6%95%B4%E5%90%88Springboot/"/>
    <id>https://github.com/ToTrk3/asaka.github.io/2022/03/19/minIO%E9%85%8D%E7%BD%AE%E5%B9%B6%E6%95%B4%E5%90%88Springboot/</id>
    <published>2022-03-19T09:40:02.000Z</published>
    <updated>2022-03-19T09:41:41.313Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/ToTrk3/asaka.github.io/ToTrk3/asaka.github.io/2022/03/19/minIO%E9%85%8D%E7%BD%AE%E5%B9%B6%E6%95%B4%E5%90%88Springboot/1p.png"></p><p>实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RegistLoginBO</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotBlank(message = &quot;手机号不能为空&quot;)</span></span><br><span class="line">    <span class="meta">@Length(min = 11, max = 11, message = &quot;手机长度不正确&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String mobile;</span><br><span class="line">    <span class="meta">@NotBlank(message = &quot;验证码不能为空&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String smsCode;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>引入依赖            </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- hibernate 验证框架 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-validation<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>统一异常拦截处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 统一异常拦截处理</span></span><br><span class="line"><span class="comment"> * 可以针对异常的类型进行捕获，然后返回json信息到前端</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GraceExceptionHandler</span> &#123;</span><br><span class="line">    <span class="meta">@ExceptionHandler(MethodArgumentNotValidException.class)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> GraceJSONResult <span class="title function_">returnMethodArgumentNotValid</span><span class="params">(MethodArgumentNotValidException e)</span> &#123;</span><br><span class="line">        <span class="type">BindingResult</span> <span class="variable">result</span> <span class="operator">=</span> e.getBindingResult();</span><br><span class="line">        Map&lt;String, String&gt; map = getErrors(result);</span><br><span class="line">        <span class="keyword">return</span> GraceJSONResult.errorMap(map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, String&gt; <span class="title function_">getErrors</span><span class="params">(BindingResult result)</span> &#123;</span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        List&lt;FieldError&gt; errorList = result.getFieldErrors();</span><br><span class="line">        <span class="keyword">for</span> (FieldError ff : errorList) &#123;</span><br><span class="line">            <span class="comment">// 错误所对应的属性字段名</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">field</span> <span class="operator">=</span> ff.getField();</span><br><span class="line">            <span class="comment">// 错误的信息</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> ff.getDefaultMessage();</span><br><span class="line">            map.put(field, msg);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试</p><p><img src="/ToTrk3/asaka.github.io/ToTrk3/asaka.github.io/2022/03/19/minIO%E9%85%8D%E7%BD%AE%E5%B9%B6%E6%95%B4%E5%90%88Springboot/2p.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/ToTrk3/asaka.github.io/ToTrk3/asaka.github.io/2022/03/19/minIO%E9%85%8D%E7%BD%AE%E5%B9%B6%E6%95%B4%E5%90%88Springboot/1p.png&quot;&gt;</summary>
      
    
    
    
    
    <category term="Spring" scheme="https://github.com/ToTrk3/asaka.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>后端统一接口</title>
    <link href="https://github.com/ToTrk3/asaka.github.io/2022/03/19/%E5%90%8E%E7%AB%AF%E7%BB%9F%E4%B8%80%E6%8E%A5%E5%8F%A3/"/>
    <id>https://github.com/ToTrk3/asaka.github.io/2022/03/19/%E5%90%8E%E7%AB%AF%E7%BB%9F%E4%B8%80%E6%8E%A5%E5%8F%A3/</id>
    <published>2022-03-19T09:39:56.000Z</published>
    <updated>2022-03-19T09:41:56.378Z</updated>
    
    <content type="html"><![CDATA[<p>接口类JSONResult</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JSONResult</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 响应业务状态码</span></span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 响应消息</span></span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 是否成功</span></span><br><span class="line">    <span class="keyword">private</span> Boolean success;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 响应数据，可以是Object，也可以是List或Map等</span></span><br><span class="line">    <span class="keyword">private</span> Object data;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 成功返回，带有数据的，直接往OK方法丢data数据即可</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JSONResult <span class="title function_">ok</span><span class="params">(Object data)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">JSONResult</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 成功返回，不带有数据的，直接调用ok方法，data无须传入（其实就是null）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JSONResult <span class="title function_">ok</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">JSONResult</span>(ResponseStatusEnum.SUCCESS);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">JSONResult</span><span class="params">(Object data)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.status = ResponseStatusEnum.SUCCESS.status();</span><br><span class="line">        <span class="built_in">this</span>.msg = ResponseStatusEnum.SUCCESS.msg();</span><br><span class="line">        <span class="built_in">this</span>.success = ResponseStatusEnum.SUCCESS.success();</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 错误返回，直接调用error方法即可，当然也可以在ResponseStatusEnum中自定义错误后再返回也都可以</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JSONResult <span class="title function_">error</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">JSONResult</span>(ResponseStatusEnum.FAILED);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 错误返回，map中包含了多条错误信息，可以用于表单验证，把错误统一的全部返回出去</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> map</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JSONResult <span class="title function_">errorMap</span><span class="params">(Map map)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">JSONResult</span>(ResponseStatusEnum.FAILED, map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 错误返回，直接返回错误的消息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> msg</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JSONResult <span class="title function_">errorMsg</span><span class="params">(String msg)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">JSONResult</span>(ResponseStatusEnum.FAILED, msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 错误返回，token异常，一些通用的可以在这里统一定义</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JSONResult <span class="title function_">errorTicket</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">JSONResult</span>(ResponseStatusEnum.TICKET_INVALID);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自定义错误范围，需要传入一个自定义的枚举，可以到[ResponseStatusEnum.java[中自定义后再传入</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> responseStatus</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JSONResult <span class="title function_">errorCustom</span><span class="params">(ResponseStatusEnum responseStatus)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">JSONResult</span>(responseStatus);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JSONResult <span class="title function_">exception</span><span class="params">(ResponseStatusEnum responseStatus)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">JSONResult</span>(responseStatus);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">JSONResult</span><span class="params">(ResponseStatusEnum responseStatus)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.status = responseStatus.status();</span><br><span class="line">        <span class="built_in">this</span>.msg = responseStatus.msg();</span><br><span class="line">        <span class="built_in">this</span>.success = responseStatus.success();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">JSONResult</span><span class="params">(ResponseStatusEnum responseStatus, Object data)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.status = responseStatus.status();</span><br><span class="line">        <span class="built_in">this</span>.msg = responseStatus.msg();</span><br><span class="line">        <span class="built_in">this</span>.success = responseStatus.success();</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">JSONResult</span><span class="params">(ResponseStatusEnum responseStatus, String msg)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.status = responseStatus.status();</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">        <span class="built_in">this</span>.success = responseStatus.success();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">JSONResult</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getStatus</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> status;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStatus</span><span class="params">(Integer status)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.status = status;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMsg</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMsg</span><span class="params">(String msg)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getData</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setData</span><span class="params">(Object data)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Boolean <span class="title function_">getSuccess</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> success;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSuccess</span><span class="params">(Boolean success)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.success = success;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>错误信息枚举类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.imooc.grace.result;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 响应结果枚举，用于提供给GraceJSONResult返回给前端的</span></span><br><span class="line"><span class="comment"> * 本枚举类中包含了很多的不同的状态码供使用，可以自定义</span></span><br><span class="line"><span class="comment"> * 便于更优雅的对状态码进行管理，一目了然</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">ResponseStatusEnum</span> &#123;</span><br><span class="line"></span><br><span class="line">    SUCCESS(<span class="number">200</span>, <span class="literal">true</span>, <span class="string">&quot;操作成功！&quot;</span>),</span><br><span class="line">    FAILED(<span class="number">500</span>, <span class="literal">false</span>, <span class="string">&quot;操作失败！&quot;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 50x</span></span><br><span class="line">    UN_LOGIN(<span class="number">501</span>,<span class="literal">false</span>,<span class="string">&quot;请登录后再继续操作！&quot;</span>),</span><br><span class="line">    TICKET_INVALID(<span class="number">502</span>,<span class="literal">false</span>,<span class="string">&quot;会话失效，请重新登录！&quot;</span>),</span><br><span class="line">    NO_AUTH(<span class="number">503</span>,<span class="literal">false</span>,<span class="string">&quot;您的权限不足，无法继续操作！&quot;</span>),</span><br><span class="line">    MOBILE_ERROR(<span class="number">504</span>,<span class="literal">false</span>,<span class="string">&quot;短信发送失败，请稍后重试！&quot;</span>),</span><br><span class="line">    SMS_NEED_WAIT_ERROR(<span class="number">505</span>,<span class="literal">false</span>,<span class="string">&quot;短信发送太快啦~请稍后再试！&quot;</span>),</span><br><span class="line">    SMS_CODE_ERROR(<span class="number">506</span>,<span class="literal">false</span>,<span class="string">&quot;验证码过期或不匹配，请稍后再试！&quot;</span>),</span><br><span class="line">    USER_FROZEN(<span class="number">507</span>,<span class="literal">false</span>,<span class="string">&quot;用户已被冻结，请联系管理员！&quot;</span>),</span><br><span class="line">    USER_UPDATE_ERROR(<span class="number">508</span>,<span class="literal">false</span>,<span class="string">&quot;用户信息更新失败，请联系管理员！&quot;</span>),</span><br><span class="line">    USER_INACTIVE_ERROR(<span class="number">509</span>,<span class="literal">false</span>,<span class="string">&quot;请前往[账号设置]修改信息激活后再进行后续操作！&quot;</span>),</span><br><span class="line">    USER_INFO_UPDATED_ERROR(<span class="number">5091</span>,<span class="literal">false</span>,<span class="string">&quot;用户信息修改失败！&quot;</span>),</span><br><span class="line">    USER_INFO_UPDATED_NICKNAME_EXIST_ERROR(<span class="number">5092</span>,<span class="literal">false</span>,<span class="string">&quot;昵称已经存在！&quot;</span>),</span><br><span class="line">    USER_INFO_UPDATED_IMOOCNUM_EXIST_ERROR(<span class="number">5092</span>,<span class="literal">false</span>,<span class="string">&quot;慕课号已经存在！&quot;</span>),</span><br><span class="line">    USER_INFO_CANT_UPDATED_IMOOCNUM_ERROR(<span class="number">5092</span>,<span class="literal">false</span>,<span class="string">&quot;慕课号无法修改！&quot;</span>),</span><br><span class="line">    FILE_UPLOAD_NULL_ERROR(<span class="number">510</span>,<span class="literal">false</span>,<span class="string">&quot;文件不能为空，请选择一个文件再上传！&quot;</span>),</span><br><span class="line">    FILE_UPLOAD_FAILD(<span class="number">511</span>,<span class="literal">false</span>,<span class="string">&quot;文件上传失败！&quot;</span>),</span><br><span class="line">    FILE_FORMATTER_FAILD(<span class="number">512</span>,<span class="literal">false</span>,<span class="string">&quot;文件图片格式不支持！&quot;</span>),</span><br><span class="line">    FILE_MAX_SIZE_500KB_ERROR(<span class="number">5131</span>,<span class="literal">false</span>,<span class="string">&quot;仅支持500kb大小以下的图片上传！&quot;</span>),</span><br><span class="line">    FILE_MAX_SIZE_2MB_ERROR(<span class="number">5132</span>,<span class="literal">false</span>,<span class="string">&quot;仅支持2MB大小以下的图片上传！&quot;</span>),</span><br><span class="line">    FILE_NOT_EXIST_ERROR(<span class="number">514</span>,<span class="literal">false</span>,<span class="string">&quot;你所查看的文件不存在！&quot;</span>),</span><br><span class="line">    USER_STATUS_ERROR(<span class="number">515</span>,<span class="literal">false</span>,<span class="string">&quot;用户状态参数出错！&quot;</span>),</span><br><span class="line">    USER_NOT_EXIST_ERROR(<span class="number">516</span>,<span class="literal">false</span>,<span class="string">&quot;用户不存在！&quot;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 自定义系统级别异常 54x</span></span><br><span class="line">    SYSTEM_INDEX_OUT_OF_BOUNDS(<span class="number">541</span>, <span class="literal">false</span>, <span class="string">&quot;系统错误，数组越界！&quot;</span>),</span><br><span class="line">    SYSTEM_ARITHMETIC_BY_ZERO(<span class="number">542</span>, <span class="literal">false</span>, <span class="string">&quot;系统错误，无法除零！&quot;</span>),</span><br><span class="line">    SYSTEM_NULL_POINTER(<span class="number">543</span>, <span class="literal">false</span>, <span class="string">&quot;系统错误，空指针！&quot;</span>),</span><br><span class="line">    SYSTEM_NUMBER_FORMAT(<span class="number">544</span>, <span class="literal">false</span>, <span class="string">&quot;系统错误，数字转换异常！&quot;</span>),</span><br><span class="line">    SYSTEM_PARSE(<span class="number">545</span>, <span class="literal">false</span>, <span class="string">&quot;系统错误，解析异常！&quot;</span>),</span><br><span class="line">    SYSTEM_IO(<span class="number">546</span>, <span class="literal">false</span>, <span class="string">&quot;系统错误，IO输入输出异常！&quot;</span>),</span><br><span class="line">    SYSTEM_FILE_NOT_FOUND(<span class="number">547</span>, <span class="literal">false</span>, <span class="string">&quot;系统错误，文件未找到！&quot;</span>),</span><br><span class="line">    SYSTEM_CLASS_CAST(<span class="number">548</span>, <span class="literal">false</span>, <span class="string">&quot;系统错误，类型强制转换错误！&quot;</span>),</span><br><span class="line">    SYSTEM_PARSER_ERROR(<span class="number">549</span>, <span class="literal">false</span>, <span class="string">&quot;系统错误，解析出错！&quot;</span>),</span><br><span class="line">    SYSTEM_DATE_PARSER_ERROR(<span class="number">550</span>, <span class="literal">false</span>, <span class="string">&quot;系统错误，日期解析出错！&quot;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// admin 管理系统 56x</span></span><br><span class="line">    ADMIN_USERNAME_NULL_ERROR(<span class="number">561</span>, <span class="literal">false</span>, <span class="string">&quot;管理员登录名不能为空！&quot;</span>),</span><br><span class="line">    ADMIN_USERNAME_EXIST_ERROR(<span class="number">562</span>, <span class="literal">false</span>, <span class="string">&quot;管理员登录名已存在！&quot;</span>),</span><br><span class="line">    ADMIN_NAME_NULL_ERROR(<span class="number">563</span>, <span class="literal">false</span>, <span class="string">&quot;管理员负责人不能为空！&quot;</span>),</span><br><span class="line">    ADMIN_PASSWORD_ERROR(<span class="number">564</span>, <span class="literal">false</span>, <span class="string">&quot;密码不能为空后者两次输入不一致！&quot;</span>),</span><br><span class="line">    ADMIN_CREATE_ERROR(<span class="number">565</span>, <span class="literal">false</span>, <span class="string">&quot;添加管理员失败！&quot;</span>),</span><br><span class="line">    ADMIN_PASSWORD_NULL_ERROR(<span class="number">566</span>, <span class="literal">false</span>, <span class="string">&quot;密码不能为空！&quot;</span>),</span><br><span class="line">    ADMIN_NOT_EXIT_ERROR(<span class="number">567</span>, <span class="literal">false</span>, <span class="string">&quot;管理员不存在或密码错误！&quot;</span>),</span><br><span class="line">    ADMIN_FACE_NULL_ERROR(<span class="number">568</span>, <span class="literal">false</span>, <span class="string">&quot;人脸信息不能为空！&quot;</span>),</span><br><span class="line">    ADMIN_FACE_LOGIN_ERROR(<span class="number">569</span>, <span class="literal">false</span>, <span class="string">&quot;人脸识别失败，请重试！&quot;</span>),</span><br><span class="line">    CATEGORY_EXIST_ERROR(<span class="number">570</span>, <span class="literal">false</span>, <span class="string">&quot;文章分类已存在，请换一个分类名！&quot;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 媒体中心 相关错误 58x</span></span><br><span class="line">    ARTICLE_COVER_NOT_EXIST_ERROR(<span class="number">580</span>, <span class="literal">false</span>, <span class="string">&quot;文章封面不存在，请选择一个！&quot;</span>),</span><br><span class="line">    ARTICLE_CATEGORY_NOT_EXIST_ERROR(<span class="number">581</span>, <span class="literal">false</span>, <span class="string">&quot;请选择正确的文章领域！&quot;</span>),</span><br><span class="line">    ARTICLE_CREATE_ERROR(<span class="number">582</span>, <span class="literal">false</span>, <span class="string">&quot;创建文章失败，请重试或联系管理员！&quot;</span>),</span><br><span class="line">    ARTICLE_QUERY_PARAMS_ERROR(<span class="number">583</span>, <span class="literal">false</span>, <span class="string">&quot;文章列表查询参数错误！&quot;</span>),</span><br><span class="line">    ARTICLE_DELETE_ERROR(<span class="number">584</span>, <span class="literal">false</span>, <span class="string">&quot;文章删除失败！&quot;</span>),</span><br><span class="line">    ARTICLE_WITHDRAW_ERROR(<span class="number">585</span>, <span class="literal">false</span>, <span class="string">&quot;文章撤回失败！&quot;</span>),</span><br><span class="line">    ARTICLE_REVIEW_ERROR(<span class="number">585</span>, <span class="literal">false</span>, <span class="string">&quot;文章审核出错！&quot;</span>),</span><br><span class="line">    ARTICLE_ALREADY_READ_ERROR(<span class="number">586</span>, <span class="literal">false</span>, <span class="string">&quot;文章重复阅读！&quot;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 人脸识别错误代码</span></span><br><span class="line">    FACE_VERIFY_TYPE_ERROR(<span class="number">600</span>, <span class="literal">false</span>, <span class="string">&quot;人脸比对验证类型不正确！&quot;</span>),</span><br><span class="line">    FACE_VERIFY_LOGIN_ERROR(<span class="number">601</span>, <span class="literal">false</span>, <span class="string">&quot;人脸登录失败！&quot;</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 系统错误，未预期的错误 555</span></span><br><span class="line">    SYSTEM_ERROR(<span class="number">555</span>, <span class="literal">false</span>, <span class="string">&quot;系统繁忙，请稍后再试！&quot;</span>),</span><br><span class="line">    SYSTEM_OPERATION_ERROR(<span class="number">556</span>, <span class="literal">false</span>, <span class="string">&quot;操作失败，请重试或联系管理员&quot;</span>),</span><br><span class="line">    SYSTEM_RESPONSE_NO_INFO(<span class="number">557</span>, <span class="literal">false</span>, <span class="string">&quot;&quot;</span>),</span><br><span class="line">    SYSTEM_ERROR_GLOBAL(<span class="number">558</span>, <span class="literal">false</span>, <span class="string">&quot;全局降级：系统繁忙，请稍后再试！&quot;</span>),</span><br><span class="line">    SYSTEM_ERROR_FEIGN(<span class="number">559</span>, <span class="literal">false</span>, <span class="string">&quot;客户端Feign降级：系统繁忙，请稍后再试！&quot;</span>),</span><br><span class="line">    SYSTEM_ERROR_ZUUL(<span class="number">560</span>, <span class="literal">false</span>, <span class="string">&quot;请求系统过于繁忙，请稍后再试！&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 响应业务状态</span></span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line">    <span class="comment">// 调用是否成功</span></span><br><span class="line">    <span class="keyword">private</span> Boolean success;</span><br><span class="line">    <span class="comment">// 响应消息，可以为成功或者失败的消息</span></span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line">    ResponseStatusEnum(Integer status, Boolean success, String msg) &#123;</span><br><span class="line">        <span class="built_in">this</span>.status = status;</span><br><span class="line">        <span class="built_in">this</span>.success = success;</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">status</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> status;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Boolean <span class="title function_">success</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> success;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">msg</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;接口类JSONResult&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/</summary>
      
    
    
    
    
    <category term="Spring" scheme="https://github.com/ToTrk3/asaka.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Springboot参数验证</title>
    <link href="https://github.com/ToTrk3/asaka.github.io/2022/03/19/Springboot%E5%8F%82%E6%95%B0%E9%AA%8C%E8%AF%81/"/>
    <id>https://github.com/ToTrk3/asaka.github.io/2022/03/19/Springboot%E5%8F%82%E6%95%B0%E9%AA%8C%E8%AF%81/</id>
    <published>2022-03-19T08:29:01.000Z</published>
    <updated>2022-03-19T09:44:41.939Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/ToTrk3/asaka.github.io/ToTrk3/asaka.github.io/2022/03/19/Springboot%E5%8F%82%E6%95%B0%E9%AA%8C%E8%AF%81/1p.png"></p><p>实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RegistLoginBO</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotBlank(message = &quot;手机号不能为空&quot;)</span></span><br><span class="line">    <span class="meta">@Length(min = 11, max = 11, message = &quot;手机长度不正确&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String mobile;</span><br><span class="line">    <span class="meta">@NotBlank(message = &quot;验证码不能为空&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String smsCode;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>引入依赖            </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- hibernate 验证框架 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-validation<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>统一异常拦截处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 统一异常拦截处理</span></span><br><span class="line"><span class="comment"> * 可以针对异常的类型进行捕获，然后返回json信息到前端</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GraceExceptionHandler</span> &#123;</span><br><span class="line">    <span class="meta">@ExceptionHandler(MethodArgumentNotValidException.class)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> GraceJSONResult <span class="title function_">returnMethodArgumentNotValid</span><span class="params">(MethodArgumentNotValidException e)</span> &#123;</span><br><span class="line">        <span class="type">BindingResult</span> <span class="variable">result</span> <span class="operator">=</span> e.getBindingResult();</span><br><span class="line">        Map&lt;String, String&gt; map = getErrors(result);</span><br><span class="line">        <span class="keyword">return</span> GraceJSONResult.errorMap(map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, String&gt; <span class="title function_">getErrors</span><span class="params">(BindingResult result)</span> &#123;</span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        List&lt;FieldError&gt; errorList = result.getFieldErrors();</span><br><span class="line">        <span class="keyword">for</span> (FieldError ff : errorList) &#123;</span><br><span class="line">            <span class="comment">// 错误所对应的属性字段名</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">field</span> <span class="operator">=</span> ff.getField();</span><br><span class="line">            <span class="comment">// 错误的信息</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> ff.getDefaultMessage();</span><br><span class="line">            map.put(field, msg);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试</p><p><img src="/ToTrk3/asaka.github.io/ToTrk3/asaka.github.io/2022/03/19/Springboot%E5%8F%82%E6%95%B0%E9%AA%8C%E8%AF%81/2p.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/ToTrk3/asaka.github.io/ToTrk3/asaka.github.io/2022/03/19/Springboot%E5%8F%82%E6%95%B0%E9%AA%8C%E8%AF%81/1p.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;实体类&lt;/p</summary>
      
    
    
    
    
    <category term="Spring" scheme="https://github.com/ToTrk3/asaka.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://github.com/ToTrk3/asaka.github.io/2022/03/18/hello-world/"/>
    <id>https://github.com/ToTrk3/asaka.github.io/2022/03/18/hello-world/</id>
    <published>2022-03-18T08:36:53.185Z</published>
    <updated>1985-10-26T08:15:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
